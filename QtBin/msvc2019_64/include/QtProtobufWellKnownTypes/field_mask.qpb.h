/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef QPROTOBUF_FIELD_MASK_H
#define QPROTOBUF_FIELD_MASK_H

#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qprotobuflazymessagepointer.h>

#include <QtCore/qbytearray.h>
#include <QtCore/qstring.h>
#include "protobufwellknowntypes_exports.qpb.h"

#include <QtCore/qmetatype.h>
#include <QtCore/qlist.h>
#include <QtCore/qshareddata.h>

#include <memory>


namespace google::protobuf {
class FieldMask;
using FieldMaskRepeated = QList<FieldMask>;
namespace FieldMask_QtProtobufNested {
enum class QtProtobufFieldEnum;
} // namespace FieldMask_QtProtobufNested


class FieldMask_QtProtobufData;
class QPB_PROTOBUFWELLKNOWNTYPES_EXPORT FieldMask : public QProtobufMessage
{
    Q_GADGET
    Q_PROTOBUF_OBJECT
    Q_DECLARE_PROTOBUF_SERIALIZERS(FieldMask)
    Q_PROPERTY(QStringList paths READ paths WRITE setPaths SCRIPTABLE true)

public:
    using QtProtobufFieldEnum = FieldMask_QtProtobufNested::QtProtobufFieldEnum;
    FieldMask();
    ~FieldMask();
    FieldMask(const FieldMask &other);
    FieldMask &operator =(const FieldMask &other);
    FieldMask(FieldMask &&other) noexcept;
    FieldMask &operator =(FieldMask &&other) noexcept;
    bool operator ==(const FieldMask &other) const;
    bool operator !=(const FieldMask &other) const;

    QStringList paths() const;
    QStringList &paths();
    void setPaths(const QStringList &paths);
    static void registerTypes();

private:
    QExplicitlySharedDataPointer<FieldMask_QtProtobufData> dptr;
};
namespace FieldMask_QtProtobufNested {
Q_NAMESPACE_EXPORT(QPB_PROTOBUFWELLKNOWNTYPES_EXPORT)

enum class QtProtobufFieldEnum {
    PathsProtoFieldNumber = 1,
};
Q_ENUM_NS(QtProtobufFieldEnum)

} // namespace FieldMask_QtProtobufNested
} // namespace google::protobuf

Q_DECLARE_METATYPE(google::protobuf::FieldMask)
#endif // QPROTOBUF_FIELD_MASK_H
